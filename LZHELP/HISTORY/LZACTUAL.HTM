<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>
<meta name="GENERATOR" content="Microsoft&reg; HTML Help Workshop 4.1" charset="ANSI">
<Title>LE LORENZ ACTUEL - ACTUAL LORENZ</Title>
<LINK REL="STYLESHEET" HREF="HISSTYLE.CSS">
</HEAD>
<BODY>
<H1>Le LORENZ actuel</H1>
<H2>Une drôle d'idée</H2>
<P>C’était durant un frais après-midi de février 2020 que tout a commencé. J’étais en train de discuter avec un ami pour parler de choses et de tracas que posait notre vie académique. Nous fréquentions le même cégep, et puis nous avions terminé notre journée. C’est donc dire que nous nous dirigions tous deux vers la sortie. Ça faisait un peu longtemps que l’on ne s’était pas rencontré. Le travail, les projets et les études ont fini par nous séparer un moment, mais sans l’avoir été de façon perpétuelle. Au terme de notre échange, je lui ai demandé avec quel moyen de transport il allait rentrer chez lui. Il me répondit avec fierté qu’il embarquerait dans son autobus préféré : la ligne 55. Et puis, par simple norme mutuelle, il me posa la même question. Ce auquel je répondis, non pas avec des paroles, mais avec des gestes : <B>« Je vais prendre le “Tchou Tchou” ! »</B> Évidemment, j’ai compris que cela pourrait créer de la confusion. Ainsi, pour éviter cela, je demandai une confirmation de compréhension. Ayant remarqué que j’ai voulu rendre la chose comique, il usa de son talent humoristique pour répondre : <B>« Oui, effectivement, tu prends... le vélo. »</B></P>
<P>Si vous me voyez venir, je vous en suis vraiment reconnaissant. Pour ceux que non, ce n'est pas grave, je vais m'apprêter à vous l’expliquer.</P>
<P>J’ai trouvé ça tellement hilarant que cela m’est resté dans la tête durant quelques jours. En réfléchissant, j’ai finalement constaté que nous n’avions pas simplement inventé une blague, mais nous avions aussi, par accident, <B>créé un message codé !</B> À l’égal du code morse, du code Baudot et même de ces codes secrets dont nous ne nous empêchions pas de créer dans notre jeunesse, nous avions <B>caché notre message !</B> Par le fait même (et c’est le plus drôle d’ailleurs), personne ne pouvait alors comprendre ce que nous disions. Ainsi, l’idée m’est venue d'inventer un code secret qui nous permettrait d’échanger des messages sans que personne d’autre ne connaissant pas ce code puisse en déduire quelque chose. Et c’est donc là que tout a commencé...</P>
<H2>Les premiers projets</H2>
<H3>La renaissance d'un ancien projet</H3>
<P>L’idée m’a tout de suite interpellé. Dès la semaine suivant notre rencontre, j’ai commencé à réfléchir aux premiers algorithmes (les formules) de chiffrement ainsi que de la façon sécuritaire de les préserver. J’ai alors pensé à <B>restaurer un projet personnel</B> qui avait failli tomber à l’abandon, car je n’y voyais aucun intérêt. Ce petit projet, affectueusement appelé <B>Enigma</B>, consistait en un fichier Excel qui transforme un message en une série de chiffres. Le cœur de ce « pseudoprogramme » résidait dans une table qui associait les différents caractères imprimables à leurs transcriptions respectives. Ainsi, le programme devait lire chacun des caractères qui composaient le message et trouver leur correspondance dans la table, pour finalement y transcrire son équivalent chiffré à la sortie.</P>
<P>Cependant, on ne parlerait pas ici de chiffrement, mais plutôt de <B>codage</B> puisqu’il s’agit de retranscrire la même information sous une autre forme. (Je l’aurai moi-même constaté près d’un an après la création d’Enigma, par le fruit de recherches à ce sujet.) Un chiffrement, au contraire, c’est dans l’idée de rendre le message incompréhensible par tout intrus malintentionné qui pourrait tirer profit du message. Et c’est sur ce point que le code Morse ainsi que mon Enigma ne peuvent être qualifiés de la sorte. En effet, si je code un message secret en Morse et que l’individu connait ce code, le pot aux roses est découvert ! Ainsi, vous aurez compris que la table de transcription se doit aussi de demeurer secrète, et c’est là qu’intervient la clé de chiffrement.</P>
<H3>Un nouvel algorithme</H3>
<P>C’est durant un cours d’intégration de physique que je réussis à élaborer un algorithme qui génère une table de transcription unique, et ce, à l’aide de n’importe quelle <B>valeur aléatoire</B>. Il s’avérera que cette valeur correspond à une <B>clé de chiffrement</B> tel que disposent tous les systèmes de chiffrements actuels qui se respectent. Cette journée-là, je venais d’accomplir la plus importante part de la conception d’un algorithme de chiffrement, soit créer son <B>algorithme</B>, justement ! En fait, je ne le dirai jamais assez, c’est sur cet élément que repose la <B>fiabilité du chiffrement</B>. Pour concevoir l’algorithme, j’ai utilisé le très célèbre tableur Excel. Il m’aura cependant donné du fil à retordre, notamment parce que les fonctions de concaténation de lettres et de chiffres ne semblaient pas évidentes à employer. (C’est une chose que je vais toutefois implanter plus facilement lorsque je basculerai dans le domaine de la programmation informatique.)</P>
<P>C’est sur le même fichier où j’entrepris les tests de mes prototypes que je créerai la <B>première version définitive de LORENZ</B>, vers la fin du mois de février 2020. Le nom m’y sera venu d’une simple recherche Wikipédia de machines de chiffrement célèbres de l’Histoire. Enigma était trop familier et trop banal à mes yeux et je voulais donner un nom plus accrocheur et révélateur que le simple « cypher » que j’utilisais pour mes prototypes. C’est ainsi que je tombai sur <B>Lorenz</B>, une machine de chiffrement de la Seconde Guerre mondiale (voyez la page sur l’<A HREF="LZORIGIN.HTM">origine de LORENZ</A> pour en savoir plus). Contrairement aux autres machines de chiffrement, Lorenz était une des seules à avoir un <B>nom bien défini</B>, et non pas un acronyme ou un sigle.</P>
<H2>LORENZ II, la première amélioration</H2>
<P>Quelques semaines plus tard, j’ai entamé, par simple curiosité, des recherches sur les techniques de décryptage utilisées pour casser les chiffrements. En essayant de les appliquer sur le chiffrement de LORENZ, j’ai constaté de <B>premières faiblesses</B>. Heureusement, je n’étais pas déçu pour longtemps. L’idée simple, mais ingénieuse, que j’ai eue, consistait à <B>chiffrer une seconde fois</B> le message chiffré. Je m’explique.</P>
<P>La première version de LORENZ, LORENZ I, chiffrait le message de sorte qu’il n’y ait qu’une <B>série de chiffres</B> en sortie. Ces chiffres, si quelque cryptologue tombait dessus, pourraient s’avérer <B>traître de leur propre secret</B> puisqu’ils peuvent dévoiler la racine du calcul qui a permis de générer la table de transcription, et donc <B>révéler l’algorithme</B> ! Cependant, si l’on remplace chacun de ces numéros par un nouveau symbole correspondant, les valeurs réelles sont alors brouillées, rendant ainsi le décryptage plus compliqué. Évidemment, les gens pourront toujours remarquer la présence de dix symboles différents et comprendront rapidement qu’il s’agit là de chiffres décimaux cachés, mais leurs associations restent inconnues. Ainsi, il m’a fallu concevoir <B>une autre table</B> qui permet de transcrire chaque numéro à un caractère spécifique.</P>
<P>Et c'est ainsi que <B>LORENZ II</B> venait d’arriver au monde.</P>
<P STYLE="color:rgb(136,0,21); font-size:16">D’ailleurs, pour l’occasion, je vous offre un <B>exemplaire de cette version</B> à la page des <A HREF="ARCHIVES\ARCHIVES.HTM">archives</A>. Je désire alors satisfaire les curieux qui aimeraient connaitre l’algorithme de l’époque, ou encore les nostalgiques, qui voudraient se remémorer d’un moment historique de cette application.<BR>
Notez qu’il s’agit de la version <B>LORENZ II</B>, soit celle au double chiffrement. Je n’ai pas pu retrouver un exemplaire de LORENZ I, ne contenant que le simple chiffrement, en particulier après une fausse manœuvre informatique qui a amené à leur suppression définitive du disque dur de mon ordinateur. Malgré tout, si vous suivez bien le mode d’emploi, vous pouvez générer du simple chiffrement avec la version II si cela vous donne l’envie.</P>
<H2>Et puis finalement, LORENZ Schlüsselzusatz</H2>
<H3>Confinement 2020</H3>
<P>Comme vous le savez, 2020 aura été une année difficile, pour ne pas dire, sombre. En effet, ce sera le vendredi 13 mars que le confinement aura commencé au Québec.</P>
<P STYLE="font-weight:bold">Je tiens d’ailleurs à rendre hommage aux gens qui nous ont quittés ainsi qu’aux familles touchées par ces événements imprévisibles. De plus, je veux rendre hommage à tout le personnel, tant du domaine de la santé que du domaine social, pour leur dévouement et leur ténacité face aux défis et aux risques qu’ils courraient.</P>
<P>Bien qu’ils aient été douloureux et exténuants pour plusieurs, ces événements ne se doivent pas de nous décourager pour autant. Comme on le dit si souvent, regardons le verre à moitié plein. C’est à la suite de ces défaites et de ces épreuves que l’humain devient plus résilient face aux dangers et aux péripéties de la vie. <B>Si tout était facile, qu’est-ce qui nous ferait progresser ?</B></P>
<H3>Pour passer le temps...</H3>
<P>C’est durant ces événements, qui deviendront probablement tristement célèbres dans l’histoire, que j’amorçai la conception du programme informatique LORENZ. Le cégep ayant littéralement suspendu la session d’hiver, je voulais alors m’occuper en apprenant quelque chose qui m’intriguait depuis longtemps. C’est dans une ambiance craintive et indécise que je décidai d’apprendre la <B>programmation informatique</B>. J’ai dû cependant choisir un <B>langage de programmation</B>, et c'est le <A HREF="https://fr.wikipedia.org/wiki/C_sharp" title="Wikipédia : C#"><B>C#</B></A> (prononcer « C sharp ») que je sélectionnai, principalement car certains de mes amis l’avaient appris par le biais d’un cours complémentaire. Je voulais en quelque sorte les suivre. Mon choix se concrétisa après avoir constaté qu’il était associé à de bonnes performances système et qu’il était couramment utilisé dans la conception de jeux vidéo.</P>
<P>C’est après avoir appris les bases que j’eus l’idée de <B>convertir LORENZ Excel en un véritable programme</B>. En effet, j’ai constaté que les algorithmes de chiffrement pouvaient se transposer facilement avec ce langage de programmation, contrairement à Excel, où les fonctions s’adaptaient plutôt mieux au calcul mathématique. C’est donc durant la fin du mois de mars et au début d’avril que j’entrepris l’écriture des premières lignes de code de ce qui allait devenir <B>l’application LORENZ</B> que vous possédez actuellement. Je le nommerai dans sa forme longue pour le distinguer de ses ancêtres : <B>LORENZ Schlüsselzusatz</B>. Ce nom ressortira pour la première fois dans la version 1.0.0, au-dessus de la fenêtre console, et qui est d’ailleurs toujours présente si vous y prêtez attention.</P>
<H3>Le jour mémorable</H3>
<P>C’est le <B>31 mars 2020</B> que je distribuai pour la première fois le programme LORENZ à un individu autre que moi. C’était en fait celui qui avait créé la fameuse blague qui, nous le savons maintenant, aura tout commencé. Ce ne fut pas immédiatement un succès en raison d’un problème technique, mais il a vite fait de se dissiper. Ainsi, le jour même (ou plutôt le soir), nous avons commencé à nous envoyer nos premiers chiffrements à l’aide de cette application. Cependant, ce n’était pas la première fois que nous utilisions LORENZ à cette fin puisque je lui avais déjà distribué sa forme Excel. Toutefois, le programme informatique nous a davantage impressionnés par sa <B>rapidité</B> d’exécution, mais de <B>préparation</B> surtout (vous pourrez tout de suite le constater si vous essayez la version II fournie aux archives). Par conséquent, le 31 mars est devenu une <B>journée phare</B> du <B>projet LORENZ</B>.</P>
<P STYLE="font-weight:bold; font-size:20">Aujourd’hui, il marque l’aboutissement à la réalité d’un rêve, parti <I>a priori</I> d’une simple blague absurde, mais révélateur de la puissance de l’imagination humaine à créer et à progresser.</P>
<P STYLE="font-size:18; color:blue">Une histoire se termine...Une autre est à s'écrire.</P>
</BODY>
</HTML>
